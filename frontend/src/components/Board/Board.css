.board {
    display: grid;
    position: relative;
    grid-template-columns: calc(.25*var(--tile-size)) calc(8*var(--tile-size));
}

.tiles {
    display: grid;
    grid-template-columns: repeat(8,var(--tile-size));
    grid-template-rows: repeat(8,var(--tile-size));
    width: calc(8*var(--tile-size));
}
.tile{
    position: relative;
}
.tile--light {
    background-color: var(--light-tile);
}
.tile--dark {
    background-color: var(--dark-tile);
}
.highlight:after {
    display: block;
    position: absolute;
    content: '';
    width : calc(.5*var(--tile-size));
    height : calc(.5*var(--tile-size));
    background: var(--highlight);
    border-radius: 50%;
    left: 25%;
    top: 25%;
}
.attacking:after {
    display: block;
    position: absolute;
    content: '';
    border: 6px solid var(--highlight);
    width : calc(var(--tile-size) - 12px);
    height : calc(var(--tile-size) - 12px);
    border-radius: 50%;
    left: 0;
    top: 0;
}
.checked:after {
    display: block;
    position: absolute;
    content: '';
    width :  var(--tile-size);
    height :  var(--tile-size);
    background: var(--check);
    border-radius: 20px;
    left: 0;
    top: 0;
}

/* --------------  FLIP THE WHOLE PLAYING AREA -------------- */
.board--black {                /* rotate the entire board   */
    transform: rotate(180deg);
}

/* keep the rank/file labels upright after the flip */
/*.board--black .ranks,*/
/*.board--black .files,*/
.board--black .ranks,
.board--black .files {
    transform: rotate(180deg);
}

/*!*  Add at the very bottom of Board.css  *!*/
/*!* ──────────────────────────────────────────────────────────── *!*/
/*.board--black .tiles {*/
/*    !* flip the 8×8 grid *!*/
/*    transform: rotate(180deg);*/
/*}*/

/*!* …and immediately un-flip every individual square*/
/*   so their “light / dark” orientation stays unchanged   *!*/
/*.board--black .tile {*/
/*    transform: rotate(180deg);*/
/*}*/
/*!* ──────────────────────────────────────────────────────────── *!*/
